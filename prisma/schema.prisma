generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    name String
    image String?
    email String? @unique
    emailVerified DateTime?
    hashedPassword String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    favoriteIds String[] @db.String
    sessions Session[]
    accounts Account[]
}

model Account { 
    id String @id @default(auto()) @map("_id") @db.ObjectId
    userId String @db.ObjectId
    providerType String
    providerId String
    providerAccountId String
    refreshToken String? @db.String
    accessToken String?  @db.String
    expiresAt Int?
    scope String?
    idToken String? @db.String
    sessionState String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([providerId, providerAccountId])
}

model Session { 
    id String @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String @unique
    userId String @db.ObjectId
    expires DateTime

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token String @unique
    expires DateTime

    @@unique([identifier, token])
}

model Movie { 
    id String @id @default(auto()) @map("_id") @db.ObjectId
    title String
    description String
    videoUrl String
    thumbnailUrl String
    genre String
    duration String
}
